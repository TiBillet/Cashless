services:
  laboutik_postgres:
    image: postgres:11.5-alpine
    restart: always
    env_file: .env
    container_name: laboutik_postgres
    hostname: laboutik_postgres
    volumes:
      - laboutik_postgres_data:/var/lib/postgresql/data
    networks:
      - laboutik_backend

  laboutik_redis:
    image: redis:6-alpine
    restart: always
    env_file: .env
    container_name: laboutik_redis
    hostname: laboutik_redis
    networks:
      - laboutik_backend

  laboutik_django:
    build: .
    restart: always
    env_file: .env
    container_name: laboutik_django
    hostname: laboutik_django
    volumes:
      - ./:/DjangoFiles
    links:
      - laboutik_postgres:postgres
      - laboutik_redis:redis
    depends_on:
      - laboutik_postgres
      - laboutik_redis
    networks:
      - laboutik_backend
    extra_hosts:
      - "fedow.tibillet.localhost:172.17.0.1"
      - "demo.tibillet.localhost:172.17.0.1"
      - "billetistan.tibillet.localhost:172.17.0.1"
      - "cashless.tibillet.localhost:172.17.0.1"
#    command: "sleep infinity"
#    command: "bash /home/tibillet/LaBoutik/DjangoFiles/launch_prod.sh"


  laboutik_celery:
    build: .
    restart: always
    env_file: .env
    container_name: laboutik_celery
    hostname: laboutik_celery
    volumes:
      - ./:/DjangoFiles
    links:
      - laboutik_postgres:postgres
      - laboutik_redis:redis
    depends_on:
      - laboutik_postgres
      - laboutik_django
    networks:
      - laboutik_backend
    extra_hosts:
      - "fedow.tibillet.localhost:172.17.0.1"
      - "demo.tibillet.localhost:172.17.0.1"
      - "billetistan.tibillet.localhost:172.17.0.1"
      - "cashless.tibillet.localhost:172.17.0.1"
    command: "poetry run celery -A Cashless worker -l INFO"


  laboutik_nginx:
    image: nginx
    restart: always
    container_name: laboutik_nginx
    hostname: laboutik_nginx
    depends_on:
      - laboutik_django
    links:
      - laboutik_django:laboutik_django
    volumes:
      - ./www:/DjangoFiles/www
      - ./logs:/DjangoFiles/logs
      - ./nginx:/etc/nginx/conf.d
    labels:
      - traefik.enable=true
      - traefik.docker.network=frontend
      - traefik.http.routers.laboutik_nginx.tls.certresolver=myresolver
      - traefik.http.routers.laboutik_nginx.rule=Host(`${DOMAIN}`)
    networks:
      - frontend
      - laboutik_backend

networks:
  frontend:
    external: true
  laboutik_backend:

volumes:
  laboutik_postgres_data:
